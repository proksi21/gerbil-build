#! /bin/sh

EXE_NAME="a.out"

C_COMPILER="gcc"

C_COMPILE_TO_EXE="$C_COMPILER -Iinclude -o $EXE_NAME"
C_COMPILE_TO_OBJ="$C_COMPILER -I../include -c -DHAVE_CONFIG_H"
C_COMPILE_TO_OBJ_LIBRARY="$C_COMPILE_TO_OBJ -D___LIBRARY"
OBJ_EXTENSION="o"

LIB_C_MODULES="main setup mem os_setup os_base os_thread os_time os_shell os_files os_dyn os_tty os_io c_intf actlog"
LIB_SCM_MODULES="_kernel _system _num _std _eval _io _nonstd _thread _repl _gambit"

#------------------------------------------------------------------------------

# Handle cleaning

if [ "$1" = "clean" ] ; then
  for f in "gambit.h" "config.h" ; do
    rm -f "include/$f"
  done
  for f in $LIB_C_MODULES $LIB_SCM_MODULES ; do
    rm -f "lib/$f.$OBJ_EXTENSION"
  done
  rm -f "$EXE_NAME"
  rm -f *.$OBJ_EXTENSION
  exit 0
fi

#------------------------------------------------------------------------------

# Generate include/gambit.h from include/gambit.h.in

cat - include/gambit.h.in <<EOF > include/temp-gambit.h

/* This file was generated by the build script from include/gambit.h.in */

/* Select single host or multiple host compilation mode */

#define ___SINGLE_HOST
/* #define ___MULTIPLE_HOSTS */

/* Select the size of the void* type, usually it is the same as long */

#define ___VOIDSTAR_WIDTH ___LONG_WIDTH
/* #define ___VOIDSTAR_WIDTH ___INT_WIDTH */

/* Select the range of the Scheme character type, full Unicode is 0x10ffff */

#define ___MAX_CHR 0x10ffff
/* #define ___MAX_CHR 0xffff */
/* #define ___MAX_CHR 0xff */

/* Select if multiple VMs can coexist in the same process */

#define ___SINGLE_VM
/* #define ___MULTIPLE_VMS */

/* Select if a VM has multiple OS threads, single threaded = green threads */

#define ___SINGLE_THREADED_VMS
/* #define ___MULTIPLE_THREADED_VMS */
/* #define ___MAX_PROCESSORS 64 */

/* Select the kind of OS threads used */

#define ___USE_NO_THREAD_SYSTEM
/* #define ___USE_POSIX_THREAD_SYSTEM */
/* #define ___USE_WIN32_THREAD_SYSTEM */
/* #define ___HAVE_CONDITION_VARIABLE */
/* #define ___DONT_HAVE_CONDITION_VARIABLE */

/* Select storage class for thread local storage */

#define ___NO_THREAD_LOCAL_STORAGE_CLASS
/* #define ___THREAD_LOCAL_STORAGE_CLASS _Thread_local */
/* #define ___THREAD_LOCAL_STORAGE_CLASS __thread */
/* #define ___THREAD_LOCAL_STORAGE_CLASS __declspec(thread) */

/* Select whether an activity log is generated, for performance debugging */

#define ___NO_ACTIVITY_LOG
/* #define ___ACTIVITY_LOG */

/* Select type to be used for C booleans, usually int is the safe choice */

#define ___BOOL int
/* #define ___BOOL bool */

/* Select whether the sigset_t type is used for signals */

#define ___USE_SIGSET_T
/* #define ___USE_NO_SIGSET_T */

/* Select OS indentification information */

#define ___SYS_TYPE_CPU "some_cpu"
#define ___SYS_TYPE_VENDOR "some_vendor"
#define ___SYS_TYPE_OS "some_os"

#define ___CONFIGURE_COMMAND "none"

/* Select standard file extensions for the OS */

#define ___OBJ_EXTENSION ".obj"
/* #define ___OBJ_EXTENSION ".o" */
#define ___EXE_EXTENSION ".exe"
/* #define ___EXE_EXTENSION "" */
#define ___BAT_EXTENSION ".bat"
/* #define ___BAT_EXTENSION "" */

/* Select paths where things are installed */

#define ___GAMBITDIR "/some/path"
/* #define ___GAMBITDIR_BIN "/some/path/bin" */
/* #define ___GAMBITDIR_INCLUDE "/some/path/include" */
/* #define ___GAMBITDIR_LIB "/some/path/lib" */
/* #define ___GAMBITDIR_DOC "/some/path/doc" */
/* #define ___GAMBITDIR_INFO "/some/path/info" */
/* #define ___GAMBITDIR_SHARE "/some/path/share" */
/* #define ___GAMBITDIR_USERLIB "/some/path/userlib" */

/* Select other features */

/* #define ___DEBUG */
/* #define ___DEBUG_CTRL_FLOW_HISTORY */
/* #define ___DEBUG_HOST_CHANGES */
/* #define ___DEBUG_ALLOC_MEM */
/* #define ___DEBUG_GARBAGE_COLLECT */
/* #define ___PROFILE */

/* #define ___INLINE_JUMPS */
/* #define ___DYNAMIC_TLS */

EOF

# Don't change the timestamp of include/gambit.h if content is the same

if ! diff include/temp-gambit.h include/gambit.h > /dev/null 2>&1 ; then
  mv include/temp-gambit.h include/gambit.h
else
  rm include/temp-gambit.h
fi

#------------------------------------------------------------------------------

# Generate include/config.h

# The Gambit runtime library and generated C code assume that
# stdlib.h, errno.h and string.h are available.  The features that
# these libraries support are sufficient for basic applications.
# However for more advanced applications that require networking,
# subprocess forking, high-resolution timing, directory reading,
# threading, etc, then some other C libraries must be available on
# the build target.
#
# In such a case, the following preprocessor defines must be adjusted
# to select the header files and functions that are available on the
# build target.

cat <<EOF > include/temp-config.h

/* This file was generated by the build script */

/* Select which header files are available. */

#define HAVE_STDIO_H
#define HAVE_STDLIB_H
#define HAVE_ERRNO_H
#define HAVE_STRING_H

#undef HAVE_UNISTD_H
#undef HAVE_PWD_H
#undef HAVE_DIRENT_H
#undef HAVE_DLFCN_H
#undef HAVE_DL_H
#undef HAVE_SYS_DXE_H
#undef HAVE_MACH_O_DYLD_H
#undef HAVE_MACH_MACH_TIME_H
#undef HAVE_SYS_TYPES_H
#undef HAVE_SYS_TIME_H
#undef HAVE_SYS_TIMES_H
#undef HAVE_SYS_TIMEB_H
#undef HAVE_SYS_TIMERS_H
#undef HAVE_TIME_H
#undef HAVE_SYS_RESOURCE_H
#undef HAVE_SYS_STAT_H
#undef HAVE_SYS_WAIT_H
#undef HAVE_SYS_MMAN_H
#undef HAVE_SYSLOG_H
#undef HAVE_EXECINFO_H
#undef HAVE_STAT_H
#undef HAVE_SIGNAL_H
#undef HAVE_NETDB_H
#undef HAVE_GRP_H
#undef HAVE_WINDOWS_H
#undef HAVE_IO_H
#undef HAVE_TCHAR_H
#undef HAVE_FLOAT_H
#undef HAVE_FPU_CONTROL_H
#undef HAVE_OS2_H
#undef HAVE_DOS_H
#undef HAVE_DIRECT_H
#undef HAVE_RETRACE_H
#undef HAVE_FILES_H
#undef HAVE_FINDER_H
#undef HAVE_ERRORS_H
#undef HAVE_FOLDERS_H
#undef HAVE_OSUTILS_H
#undef HAVE_POWER_H
#undef HAVE_CODEFRAGMENTS_H
#undef HAVE_SIOUX_H
#undef HAVE_MAC_GUI_H
#undef HAVE_UNIX_H
#undef HAVE_WDEFWIN_H
#undef HAVE_TFORK_H
#undef HAVE_CURSES_H
#undef HAVE_NCURSES_H
#undef HAVE_NETINET_IN_H
#undef HAVE_ARPA_INET_H
#undef HAVE_TERMIOS_H
#undef HAVE_TERM_H
#undef HAVE_PTY_H
#undef HAVE_STROPTS_H
#undef HAVE_LIBUTIL_H
#undef HAVE_UTIL_H
#undef HAVE_SYS_FPU_H
#undef HAVE_FENV_H
#undef HAVE_FCNTL_H
#undef HAVE_SYS_IOCTL_H
#undef HAVE_SYS_SOCKET_H
#undef HAVE_STRINGS_H
#undef HAVE_MEMORY_H
#undef HAVE_SYS_SYSCTL_H
#undef HAVE_CRT_EXTERNS_H
#undef HAVE_WS2TCPIP_H
#undef HAVE_TARGETCONDITIONALS_H
#undef HAVE_AVAILABILITYMACROS_H
#undef HAVE_POLL_H

/* Select which library functions are available. */

#undef HAVE_PIPE
#undef HAVE_SOCKETPAIR
#undef HAVE_CHDIR
#undef HAVE_EXECVP
#undef HAVE_GETENV
#undef HAVE_GETGRNAM
#undef HAVE_GETPID
#undef HAVE_GETPPID
#undef HAVE_GETPWNAM
#undef HAVE_IOCTL
#undef HAVE_LINK
#undef HAVE_MKDIR
#undef HAVE_MKFIFO
#undef HAVE_OPENDIR
#undef HAVE_RMDIR
#undef HAVE_SOCKET
#undef HAVE_UTIMES
#undef HAVE_STAT
#undef HAVE_STAT64
#undef HAVE_STRERROR
#undef HAVE_SYMLINK
#undef HAVE_SYSCONF
#undef HAVE_SYSCTL
#undef HAVE_SYSCTLBYNAME
#undef HAVE_SYSLOG
#undef HAVE_BACKTRACE_SYMBOLS_FD
#undef HAVE_UNLINK
#undef HAVE_WAITPID
#undef HAVE_MMAP
#undef HAVE_FCNTL

#undef HAVE_TCGETSETATTR

#undef HAVE_SIGACTION
#undef HAVE_SIGEMPTYSET
#undef HAVE_SIGADDSET
#undef HAVE_SIGPROCMASK
#undef HAVE_SIGNAL

#undef HAVE_CLOCK_GETTIME
#undef HAVE_MACH_ABSOLUTE_TIME
#undef HAVE_GETCLOCK
#undef HAVE_GETSYSTEMTIMEASFILETIME
#undef HAVE_TIMEBEGINPERIOD
#undef HAVE_GETTIMEOFDAY
#undef HAVE_FTIME
#undef HAVE_TIME

#undef HAVE_NANOSLEEP
#undef HAVE_Sleep
#undef HAVE_SLEEP

#undef HAVE_GETPROCESSTIMES
#undef HAVE_GETRUSAGE
#undef HAVE_TIMES
#undef HAVE_CLOCK
#undef HAVE_DOSQUERYSYSINFO

#undef HAVE_SETITIMER
#undef HAVE_DOS_SETVECT
#undef HAVE_DOSSTARTTIMER
#undef HAVE_VINSTALL
#undef HAVE_CREATETHREAD

#undef HAVE_SHL_LOAD
#undef HAVE_LOADLIBRARY
#undef HAVE_DOSLOADMODULE
#undef HAVE_DXE_LOAD
#undef HAVE_GETDISKFRAGMENT
#undef HAVE_NSLINKMODULE
#undef HAVE_DLOPEN

#undef HAVE_GETHOSTNAME
#undef HAVE_INET_PTON
#undef HAVE_GETADDRINFO
#undef HAVE_GETHOSTBYNAME
#undef HAVE_GETHOSTBYADDR
#undef HAVE_GETSERVBYNAME
#undef HAVE_GETSERVBYPORT
#undef HAVE_GETPROTOBYNAME
#undef HAVE_GETPROTOBYNUMBER
#undef HAVE_GETNETBYNAME

#undef HAVE_SELECT
#undef HAVE_POLL
#undef HAVE_PPOLL
#undef HAVE_MSGWAITFORMULTIPLEOBJECTS

#undef HAVE_TGETSTR
#undef HAVE_TIGETSTR

#undef HAVE_OPENPTY
#undef HAVE_GETPT
#undef HAVE_PTSNAME
#undef HAVE_CTERMID
#undef HAVE_ISASTREAM

#undef HAVE_HSTRERROR

#undef HAVE_SNPRINTF

#undef HAVE_GET_FPC_CSR

#undef HAVE_ENVIRON
#undef HAVE__NSGETENVIRON
#undef HAVE_REMOVE
#undef HAVE_RENAME

#undef HAVE_PTHREAD_SETAFFINITY_NP

/* Determine which types are available */

#undef HAVE_STRUCT_STAT64

/* Define appropriately if sys/types.h does not define socklen_t.  */
#undef socklen_t

/*
 * Define appropriately as the prefix and suffix added to function
 * names by the C compiler.
 */
#undef ___IMPORTED_ID_PREFIX
#undef ___IMPORTED_ID_SUFFIX

/* Define as 1 if you want to enable OpenSSL support */
#undef USE_OPENSSL

/* Define as 1 if you want to enable poll support */
#undef USE_POLL_FOR_SELECT

/* Define as 1 if you want to enable high-resolution timing */
#undef USE_HIGH_RES_TIMING

/* Define as 1 to select a filesystem path encoding */
#undef ___PATH_ENCODING_UTF8
#undef ___PATH_ENCODING_LATIN1
#undef ___PATH_ENCODING_UCS2
#undef ___PATH_ENCODING_UCS4
#undef ___PATH_ENCODING_WCHAR
#undef ___PATH_ENCODING_NATIVE

/*
 * Define as a UCS_2 array initialization containing the default
 * runtime options, e.g. #define ___DEFAULT_RUNTIME_OPTIONS {'d','2','\0'}
 */
#undef ___DEFAULT_RUNTIME_OPTIONS

EOF

# Don't change the timestamp of include/config.h if content is the same

if ! diff include/temp-config.h include/config.h > /dev/null 2>&1 ; then
  mv include/temp-config.h include/config.h
else
  rm include/temp-config.h
fi

#------------------------------------------------------------------------------

# Compile the library

LIB_OBJ_FILES=""

cd lib

for f in $LIB_C_MODULES $LIB_SCM_MODULES ; do
  C_FILE="$f.c"
  OBJ_FILE="$f.$OBJ_EXTENSION"
  echo $C_COMPILE_TO_OBJ_LIBRARY "$C_FILE"
  $C_COMPILE_TO_OBJ_LIBRARY "$C_FILE"
  LIB_OBJ_FILES="$LIB_OBJ_FILES lib/$OBJ_FILE"
done

cd ..

#------------------------------------------------------------------------------

# Compile and link the executable

echo $C_COMPILE_TO_EXE $LIB_OBJ_FILES *.c -lm
$C_COMPILE_TO_EXE $LIB_OBJ_FILES *.c -lm

#------------------------------------------------------------------------------
